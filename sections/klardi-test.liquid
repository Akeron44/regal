{%- liquid  
  assign ipr_desktop = section.settings.metaobjects_per_row_desktop
  assign ipr_tablet = section.settings.metaobjects_per_row_tablet
  assign ipr_mobile = section.settings.metaobjects_per_row_mobile  
  assign slider_mobile = false
  assign slider_desktop = false
  assign slide_peek = false
  assign full_width = section.settings.enable_full_width
  assign slider_items_count = section.blocks | where: 'type', 'metaobject_block' | size
  assign header_block = section.blocks | where: 'type', 'section_header' | first

  capture sizes
    render 'img_sizes', full_width: full_width, ipr_mobile: ipr_mobile, ipr_tablet: ipr_tablet, ipr_desktop: ipr_desktop
  endcapture

  if section.settings.layout_mobile contains 'slide'
    assign slider_mobile = true
  endif
  if section.settings.layout_desktop == 'slide'
    assign slider_desktop = true
  endif

  if section.settings.layout_mobile contains 'peek'
    assign slide_peek = true
  endif
-%}

<div
  id="{{ section.id }}"
  class="pt pb sm-pt sm-pb container color-{{ section.settings.color_scheme }}{% if full_width %} sm-edge-to-edge sm-p-page{% endif %}{% if slider_mobile %} sm-down-edge-to-edge{% endif %}"
  style="
    --pt: {{ section.settings.padding_top | append: 'px' }};
    --pb: {{ section.settings.padding_bottom | append: 'px' }};
    --sm-pt: {{ section.settings.md_padding_top | append: 'px' }};
    --sm-pb: {{ section.settings.md_padding_bottom | append: 'px' }};
  ">

  {%- if header_block != blank -%}
    {% render 'section-header',
      size_multiplier: header_block.settings.size_multiplier,
      sm_size_multiplier: header_block.settings.sm_size_multiplier,
      text_align: header_block.settings.text_alignment,
      subtitle: header_block.settings.subtitle,
      subtitle_tag: header_block.settings.subtitle_tag,
      title: header_block.settings.title,
      title_tag: header_block.settings.title_tag,
      text: header_block.settings.text %}
  {%- endif -%}

  <gridy-slider
    id="slider-{{ section.id }}"
    class="gridy-slider"
    data-mobile-enabled="{{ slider_mobile }}"
    data-tablet-enabled="{{ slider_desktop }}"
    data-desktop-enabled="{{ slider_desktop }}"
    data-ipr-desktop="{{ ipr_desktop }}"
    data-ipr-tablet="{{ ipr_tablet }}"
    data-ipr-mobile="{{ ipr_mobile }}"
    data-arrows="true"
    data-sliding-behavior="{{ section.settings.sliding_behavior }}"
    data-autoplay="{{ section.settings.autoplay}}"
    data-autoplay-delay="{{ section.settings.autoplay_speed | times: 1000 }}">
    <div
      class="grid sm-gap gridy-track scrollbar--hide grid-cols-{{ ipr_mobile }} sm-grid-cols-{{ ipr_tablet }} md-grid-cols-{{ ipr_desktop }}{% if slider_mobile %} track-inner-padding{% endif %}{% if slide_peek %} slide-peek{% endif %}" 
      style="
        --gap: {% if section.settings.custom_gap >= 0 %}{{ section.settings.custom_gap | append: 'px' }}{% else %}{{ settings.gutter | append: 'px' }}{% endif %};
        --sm-gap: {% if section.settings.sm_custom_gap >= 0 %}{{ section.settings.sm_custom_gap | append: 'px' }}{% else %}{{ settings.gutter_sm | append: 'px' }}{% endif %};
    ">
      {% for block in section.blocks %}
        {%- if block.type == 'section_header' -%}
          {%- continue -%}
        {%- endif -%}

        {%- assign slide_id = 'slider-' | append: section.id | append: '-item-' | append: forloop.index -%}
        {% assign metaobject = shop.metaobjects.reusable_content_block[block.settings.metaobject_link.object.id] %}
        {% if metaobject %}
          <div class="metaobject-card" id="{{ slide_id }}">
            <h3>{{ metaobject.title }}</h3>
            <p>{{ metaobject.content }}</p>
            {% if metaobject.image != blank %}
              <img src="{{ metaobject.image | img_url: 'large' }}" alt="{{ metaobject.title }}">
            {% endif %}
          </div>
        {% endif %}
      {% endfor %}
    </div>

    {%- liquid
      # Class for positioning
      assign arrows_class = 'sm-on-edge'

      # Class to hide if all in view
      if slider_items_count <= ipr_desktop
        assign arrows_class = arrows_class | append: ' md-hide'
      endif
      if slider_items_count <= ipr_tablet
        assign arrows_class = arrows_class | append: ' sm-to-md-hide'
      endif
      if slider_items_count <= ipr_mobile
        assign arrows_class = arrows_class | append: ' sm-down-hide'
      endif
    -%}
    
    {% render 'gridy-arrows',
      class: arrows_class %}
  </gridy-slider>
</div>

{% schema %}
{
  "name": "Metaobject List Section",
  "disabled_on": {
    "groups": ["header", "footer", "aside"]
  },
  "settings": [
    {
      "type": "paragraph",
      "content": "This section displays a list of metaobjects."
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "default": "default",
      "label": "Color Scheme"
    },
    {
      "type": "header",
      "content": "Desktop Layout"
    },
    {
      "type": "checkbox",
      "id": "enable_full_width",
      "label": "Enable Full Width",
      "default": false
    },
    {
      "type": "select",
      "id": "layout_desktop",
      "label": "Display Type",
      "options": [
        {
          "value": "grid",
          "label": "Grid"
        },
        {
          "value": "slide",
          "label": "Slider"
        }
      ],
      "default": "grid"
    },
    {
      "type": "range",
      "id": "metaobjects_per_row_desktop",
      "label": "Metaobjects Per Row (Desktop)",
      "min": 2,
      "max": 6,
      "default": 4
    },
    {
      "type": "range",
      "id": "sm_custom_gap",
      "label": "Grid Gap (Small)",
      "info": "Custom grid gap for small screens.",
      "default": -1,
      "min": -1,
      "max": 40,
      "step": 1,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "md_padding_top",
      "min": 0,
      "max": 160,
      "step": 8,
      "unit": "px",
      "label": "Padding Top (Medium)",
      "default": 40
    },
    {
      "type": "range",
      "id": "md_padding_bottom",
      "min": 0,
      "max": 160,
      "step": 8,
      "unit": "px",
      "label": "Padding Bottom (Medium)",
      "default": 40
    },
    {
      "type": "header",
      "content": "Tablet Layout"
    },
    {
      "type": "paragraph",
      "content": "Settings for tablet layout."
    },
    {
      "type": "range",
      "id": "metaobjects_per_row_tablet",
      "label": "Metaobjects Per Row (Tablet)",
      "min": 1,
      "max": 4,
      "default": 4
    },
    {
      "type": "header",
      "content": "Mobile Layout"
    },
    {
      "type": "select",
      "id": "layout_mobile",
      "label": "Display Type",
      "options": [
        {
          "value": "grid",
          "label": "Grid"
        },
        {
          "value": "slide",
          "label": "Slider"
        },
        {
          "value": "slide peek",
          "label": "Slider with Peek"
        }
      ],
      "default": "slide peek"
    },
    {
      "type": "range",
      "id": "metaobjects_per_row_mobile",
      "label": "Metaobjects Per Row (Mobile)",
      "min": 1,
      "max": 3,
      "default": 1
    },
    {
      "type": "range",
      "id": "custom_gap",
      "label": "Grid Gap",
      "info": "Custom grid gap for all screens.",
      "default": -1,
      "min": -1,
      "max": 40,
      "step": 1,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 160,
      "step": 8,
      "unit": "px",
      "label": "Padding Top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 160,
      "step": 8,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 40
    },
    {
      "type": "header",
      "content": "Slideshow Settings"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Enable Autoplay",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "label": "Autoplay Speed",
      "info": "Speed of autoplay in seconds.",
      "default": 5,
      "min": 2,
      "max": 8,
      "step": 1,
      "unit": "s"
    },
    {
      "type": "select",
      "id": "sliding_behavior",
      "label": "Sliding Behavior",
      "default": "all",
      "info": "Behavior of slides in the slider.",
      "options": [
        {
          "value": "single",
          "label": "Single"
        },
        {
          "value": "all",
          "label": "All"
        }
      ]
    }
  ],
  "blocks": [
    {
      "name": "Section Header",
      "type": "section_header",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "Section header information."
        },
        {
          "type": "text",
          "id": "subtitle",
          "label": "Subtitle",
          "default": "Subheading"
        },
        {
          "type": "select",
          "id": "subtitle_tag",
          "label": "Subtitle Tag",
          "info": "Tag for the subtitle.",
          "default": "h3",
          "options": [
            {
              "value": "h1",
              "label": "H1"
            },
            {
              "value": "h2",
              "label": "H2"
            },
            {
              "value": "h3",
              "label": "H3"
            },
            {
              "value": "h4",
              "label": "H4"
            },
            {
              "value": "h5",
              "label": "H5"
            },
            {
              "value": "h6",
              "label": "H6"
            }
          ]
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Metaobject list"
        },
        {
          "type": "select",
          "id": "title_tag",
          "label": "Title Tag",
          "info": "Tag for the title.",
          "default": "h2",
          "options": [
            {
              "value": "h1",
              "label": "H1"
            },
            {
              "value": "h2",
              "label": "H2"
            },
            {
              "value": "h3",
              "label": "H3"
            },
            {
              "value": "h4",
              "label": "H4"
            },
            {
              "value": "h5",
              "label": "H5"
            },
            {
              "value": "h6",
              "label": "H6"
            }
          ]
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "select",
          "id": "text_alignment",
          "label": "Text Alignment",
          "options": [ 
            {
              "value": "text-align-left",
              "label": "Left"
            },
            {
              "value": "text-align-center",
              "label": "Center"
            },
            {
              "value": "text-align-right",
              "label": "Right"
            }
          ],
          "default": "text-align-center"
        },
        {
          "type": "header",
          "content": "Desktop Layout"
        },
        {
          "type": "select",
          "id": "sm_size_multiplier",
          "label": "Small Size Multiplier",
          "default": "sm-size--default",
          "options": [
            {
              "value": "sm-size--tiny",
              "label": "Tiny"
            },
            {
              "value": "sm-size--small",
              "label": "Small"
            },
            {
              "value": "sm-size--default",
              "label": "Default"
            },
            {
              "value": "sm-size--large",
              "label": "Large"
            },
            {
              "value": "sm-size--huge",
              "label": "Huge"
            },
            {
              "value": "sm-size--gigantic",
              "label": "Gigantic"
            },
            {
              "value": "sm-size--outrageous",
              "label": "Outrageous"
            }
          ]
        },
        {
          "type": "header",
          "content": "Mobile Layout"
        },
        {
          "type": "select",
          "id": "size_multiplier",
          "label": "Size Multiplier",
          "default": "size--default",
          "options": [
            {
              "value": "size--tiny",
              "label": "Tiny"
            },
            {
              "value": "size--small",
              "label": "Small"
            },
            {
              "value": "size--default",
              "label": "Default"
            },
            {
              "value": "size--large",
              "label": "Large"
            },
            {
              "value": "size--huge",
              "label": "Huge"
            },
            {
              "value": "size--gigantic",
              "label": "Gigantic"
            },
            {
              "value": "size--outrageous",
              "label": "Outrageous"
            }
          ]
        }
      ]
    },
    {
      "name": "Metaobject Block",
      "type": "metaobject_block",
      "settings": [
        {
          "type": "link_list",
          "id": "metaobject_link",
          "label": "Metaobject Link",
          "info": "Select the metaobject to display."
        },
        {
          "type": "select",
          "id": "card_bg",
          "label": "Card Background",
          "info": "Select the background for the card.",
          "default": "bg-solid",
          "options": [
            {
              "value": "bg-solid",
              "label": "Solid"
            },
            {
              "value": "bg-gradient",
              "label": "Gradient"
            },
            {
              "value": "bg-transparent",
              "label": "Transparent"
            }
          ]
        },
        {
          "type": "image_picker",
          "id": "custom_img",
          "label": "Custom Image",
          "info": "Select a custom image for the card."
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Metaobject List Section",
      "settings": {
      },
      "blocks": [
        { "type": "section_header" },
        { "type": "metaobject_block" },
        { "type": "metaobject_block" },
        { "type": "metaobject_block" },
        { "type": "metaobject_block" }
      ]
    }
  ]
}
{% endschema %}
