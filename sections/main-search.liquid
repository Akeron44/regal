{%- liquid
  # Items per row
  assign ipr_desktop = section.settings.md_items_per_row
  assign ipr_tablet = section.settings.sm_items_per_row
  assign ipr_mobile = section.settings.items_per_row 

  # Controls visibility
  assign sort_by = search.sort_by | default: search.default_sort_by
  assign show_filters = section.settings.enable_filtering
  assign show_count = section.settings.show_count
  assign show_sort_by = section.settings.enable_sorting
  
  assign actions_items_count = 0
  
  if show_filters
    assign actions_items_count = 1
  endif
  if show_count
    assign actions_items_count = actions_items_count | plus: 1
  endif
  if show_sort_by
    assign actions_items_count = actions_items_count | plus: 1
  endif

  # Grid gap
  assign grid_gap = settings.gutter | append: 'px'
  assign sm_grid_gap = settings.gutter_sm | append: 'px'

  if section.settings.grid_gap >= 0
    assign grid_gap = section.settings.grid_gap | append: 'px'
  endif
  if section.settings.sm_grid_gap >= 0
    assign sm_grid_gap = section.settings.sm_grid_gap | append: 'px'
  endif
-%}

<div 
  data-ajax-parent
  class="container custom-child-for-animation mt mb sm-mt sm-mb{% if section.settings.enable_full_width %} full-width{% endif %} color-{{ section.settings.color_scheme }}"
  style="
        --mt: {{ section.settings.padding_top | append: 'px' }};
        --mb: {{ section.settings.padding_bottom | append: 'px' }};
        --sm-mt: {{ section.settings.md_padding_top | append: 'px' }};
        --sm-mb: {{ section.settings.md_padding_bottom | append: 'px' }};">
  <header class="pt-40 pb-40 text-center">
    {%- if search.performed -%}
      <h1>{{ 'templates.search.search_for' | t: terms: search.terms }}</h1>
    {%- else -%}
      <h1>{{ 'general.search.search' | t }}</h1>
    {%- endif -%}
  </header>

  {%- if search.performed -%}
    {%- if search.filters != empty -%}
      {%- if actions_items_count > 0 -%}
        <div class="product-grid-actions items-count-{{ actions_items_count }}">
          {%- if section.settings.show_count -%}
            <p class="products-count size--tiny {% if show_filters and show_sort_by == false %}--to-right{% endif %} " id="products-count-ajax">
              {{ 'templates.search.results_with_count' | t: count: search.results_count }}
            </p>
          {%- endif -%}
          {%- if section.settings.enable_filtering -%}
            <a class="btn btn--link size--small btn--with-icon filters-button" href="#drawer-filter">{{ 'products.facets.filter_button' | t }} <span class="link-icon icon--round">{%- render 'icon-caret' -%}</span></a>
          {%- endif -%}
          {%- if section.settings.enable_sorting -%}
            <label for="sort-by" class="sort-by">
              <span class="visually-hidden">{{ 'products.facets.sort_button' | t }}</span>
              <sort-by>
                <select id="sort-by" class="btn btn--link size--small">
                  {%- for option in search.sort_options -%}
                    <option value="{{ option.value }}" {%- if option.value == sort_by -%}selected="selected"{%- endif -%}>
                      {{ option.name }}
                    </option>
                  {%- endfor -%}
                </select>
                <span class="link-icon icon--round">{%- render 'icon-caret' -%}</span>
              </sort-by>
            </label>
          {%- endif -%}
        </div>
        {%- if section.settings.enable_filtering -%}
          {%- render 'current-facets', context: search -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}

    <div id="product-grid-ajax" data-filtered-count="{{ search.results_count }}" data-context="search" class="mt-24 sm-mt-gutter">
      {% paginate search.results by 24 %}
        <div class="template-search__results collection" data-id="{{ section.id }}">
          <div class="grid sm-gap grid-cols-{{ ipr_mobile }} sm-grid-cols-{{ ipr_tablet }} md-grid-cols-{{ ipr_desktop }}" style="
          --gap: {{ grid_gap }};
          --sm-gap: {{ sm_grid_gap }}
        ">
            {%- if search.results_count > 0 -%}
              {%- liquid
                for item in search.results
                  assign lazy_load = false 
                  if forloop.index > 2
                    assign lazy_load = true 
                  endif 
                  
                  case item.object_type
                    when 'product'
                      render 'card-product', product: item, lazyload: lazy_load
                    when 'article'
                      render 'card-article', article: item, aspect_ratio: settings.product_card_aspect_ratio, lazyload: lazy_load, section: section 
                    when 'page'
                      render 'card-article', article: item, aspect_ratio: settings.product_card_aspect_ratio, lazyload: lazy_load, section: section
                  endcase
                endfor
                render 'loading'
              -%}
            {%- else -%}
              <div class="mt-gutter mb-gutter">
                <p role="status">{{ 'templates.search.results_with_count_and_term' | t: terms: search.terms, count: search.results_count }}</p>
                <a class="link" href="{{ routes.root_url }}">{{ 'general.continue_shopping' | t }}</a>
              </div>
            {%- endif -%}
          </div>
          
          <div id="pagination-ajax">
            {%- liquid
              if paginate.pages > 1 
                render 'pagination', paginate: paginate, anchor: '' 
              endif 
            -%}
          </div>
        </div>
      {% endpaginate %}
    </div>
  {%- endif -%}
</div>

{%- if section.settings.enable_filtering and search.results.size > 0 -%}
  {%- render 'drawer-filters', context: 'search' -%}
  <script type="text/javascript" data-loading="lazy" data-src="{{ 'component-facets.js' | asset_url }}"></script>
{%- endif -%}

{% schema %}
  {
    "name": "t:sections.main-search.name",
    "class": "anim-custom-child pb-gutter",
    "settings": [
      {
        "type": "color_scheme",
        "id": "color_scheme",
        "default": "default",
        "label": "t:sections.colors.color_scheme.label"
      },
      {
        "type": "range",
        "id": "results_per_page",
        "min": 1,
        "max": 50,
        "default": 16,
        "label": "t:sections.main-search.settings.results_per_page.label"
      },
      {
        "type": "checkbox",
        "id": "show_count",
        "default": true,
        "label": "t:sections.main-search.settings.show_count.label"
      },
      {
        "type": "checkbox",
        "id": "enable_sorting",
        "default": true,
        "label": "t:sections.main-search.settings.enable_sorting.label"
      },
      {
        "type": "checkbox",
        "id": "enable_filtering",
        "default": true,
        "label": "t:sections.main-search.settings.enable_filtering.label"
      },
      {
        "type": "header",
        "content": "t:sections.headers.desktop_layout"
      },
      {
        "type": "checkbox",
        "id": "enable_full_width",
        "label": "t:sections.layout.section_width.full_width",
        "default": false
      },
      {
        "type": "range",
        "id": "md_items_per_row",
        "min": 1,
        "max": 6,
        "default": 4,
        "label": "t:sections.layout.products_per_row"
      },
      {
        "type": "range",
        "id": "sm_grid_gap",
        "label": "t:sections.inputs.range.grid_gap",
        "info": "t:sections.inputs.range.grid_gap_info",
        "default": -1,
        "min": -1,
        "max": 40,
        "step": 1,
        "unit": "px"
      },
      {
        "type": "range",
        "id": "md_padding_top",
        "min": 0,
        "max": 160,
        "step": 8,
        "unit": "px",
        "label": "t:sections.layout.margin_top",
        "default": 0
      },
      {
        "type": "range",
        "id": "md_padding_bottom",
        "min": 0,
        "max": 160,
        "step": 8,
        "unit": "px",
        "label": "t:sections.layout.margin_bottom",
        "default": 0
      },
      {
        "type": "header",
        "content": "t:sections.headers.tablet_layout"
      },
      {
        "type": "paragraph",
        "content": "t:sections.layout.display_type.tablet_paragraph"
      },
      {
        "type": "range",
        "id": "sm_items_per_row",
        "min": 1,
        "max": 4,
        "default": 4,
        "label": "t:sections.layout.products_per_row"
      },
      {
        "type": "header",
        "content": "t:sections.headers.mobile_layout"
      },
      {
        "type": "range",
        "id": "items_per_row",
        "min": 1,
        "max": 3,
        "default": 1,
        "label": "t:sections.layout.products_per_row"
      },
      {
        "type": "range",
        "id": "grid_gap",
        "label": "t:sections.inputs.range.grid_gap",
        "info": "t:sections.inputs.range.grid_gap_info",
        "default": -1,
        "min": -1,
        "max": 40,
        "step": 1,
        "unit": "px"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 160,
        "step": 8,
        "unit": "px",
        "label": "t:sections.layout.margin_top",
        "default": 0
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 160,
        "step": 8,
        "unit": "px",
        "label": "t:sections.layout.margin_bottom",
        "default": 0
      }
    ]
  }
{% endschema %}